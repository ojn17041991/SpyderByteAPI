name: Deploy to Azure Web App (ZIP)

on:
  push:
    branches: [ "prod" ]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: SpyderByteAPI-AppService
  AZURE_WEBAPP_PACKAGE_PATH: '.'
  DOTNET_VERSION: '8.x'

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the git repo.
        uses: actions/checkout@v4

      - name: Set up .NET Core SDK.
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Set up dependency caching for faster builds.
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Create the build.
        run: dotnet build --target:SpyderByteAPI --configuration Release

      - name: Create the publish output.
        run: dotnet publish -c Release --property:PublishDir=${{env.DOTNET_ROOT}}/myapp
        
      - name: Upload artifact for deployment job.
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp
          
  deploy:
    runs-on: ubuntu-latest
    
    permissions:
      contents: none
    
    needs: build
    
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app

      - name: ZIP deploy to Azure Web App.
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
